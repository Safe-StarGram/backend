plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'
description = 'backend'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// OAuth2 소셜 로그인 (카카오/구글 등)
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// JWT 토큰 처리
	implementation 'com.auth0:java-jwt:4.4.0'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

//	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testCompileOnly 'org.projectlombok:lombok:1.18.38'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'

	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'com.mysql:mysql-connector-j'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

}

tasks.named('test') {
	useJUnitPlatform()
	jvmArgs = [
		'--add-opens', 'java.base/java.lang=ALL-UNNAMED',
		'--add-opens', 'java.base/java.util=ALL-UNNAMED',
		'--add-opens', 'java.base/java.lang.reflect=ALL-UNNAMED',
		'--add-opens', 'java.base/java.text=ALL-UNNAMED',
		'--add-opens', 'java.desktop/java.awt.font=ALL-UNNAMED'
	]
}
